package main

import (
	"fmt"
	"sync"
)

/* Дана последовательность чисел: 2,4,6,8,10.
Найти сумму их квадратов(4+16+36….)
с использованием конкурентных вычислений. */

func main() {
	//создаём массив с заданными числами
	arr := [5]int{2, 4, 6, 8, 10}
	var sum int
	//создаём мютекс для избежания состояния гонки
	var mu sync.Mutex
	//создаём вэйтгруппу для ожидания отработки горутин
	var wg sync.WaitGroup
	wg.Add(len(arr))
	//в цикле запускаем горутины для суммирования квадратов чисел
	for _, v := range arr {
		go func(x int) {
			mu.Lock()
			sum += x * x
			mu.Unlock()
			wg.Done()
		}(v)
	}
	//ждём, когда все горутины отработают и затем выводим сумму
	wg.Wait()
	fmt.Println(sum)
}
